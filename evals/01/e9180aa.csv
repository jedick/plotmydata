Number,Date,Source,Prompt,Ref_Code,Gen_Tool,Gen_Code,Correct,Note
1,2025-10-24,?graphics::plot.default,Plot distance vs speed from the cars dataset with medium-large open blue rectangles and an 8x8 grid,"Speed <- cars$speed\nDistance <- cars$dist\nplot(Speed, Distance, panel.first = grid(8, 8), pch = 0, cex = 1.2, col = ""blue"")",make_plot,"png(filename)\npar(mfrow=c(1,1), mar=c(5,5,2,2))\nplot(cars$speed, cars$dist, type='n', xlab='Speed', ylab='Distance', main='Distance vs Speed')\nrect(cars$speed - 0.5, cars$dist - 2, cars$speed + 0.5, cars$dist + 2, col='blue', border='black', density=NULL)\ngrid()\ndev.off()",False,Correct grid spacing and use unfilled points
2,2025-10-24,,ggplot wt vs mpg from mtcars,"library(ggplot2)\nggplot(mtcars, aes(mpg, wt)) + geom_point()\nggsave(filename, device = ""png"")",make_ggplot,"library(ggplot2)\nggplot(mtcars, aes(mpg, wt)) +\n  geom_point() +\n  labs(title = ""Weight vs MPG"", x = ""Miles per Gallon (mpg)"", y = ""Weight (wt)"")\n\nggsave(filename, device = ""png"")",True,Title and axis labels not specified by user
3,2025-10-24,,Plot distance vs speed from the cars dataset with medium-large open blue rectangles and gridlines at the tick marks,"Speed <- cars$speed\nDistance <- cars$dist\nplot(Speed, Distance, panel.first = grid(), pch = 0, cex = 1.2, col = ""blue"")",make_plot,"png(filename)\ndf <- read.csv(""https://people.sc.fsu.edu/~jburkardt/data/csv/cars.csv"")\nplot(df$speed, df$distance, main = ""Distance vs Speed"", xlab = ""Speed"", ylab = ""Distance"", pch = 22, col = ""blue"", bg = ""lightblue"", cex = 2)\ngrid()\ndev.off()",False,Use builtin dataset
4,2025-10-24,?graphics::plot.default,Use R's cars dataset. Make a distance-speed (y-x) plot with a lowess fit.,"Speed <- cars$speed\nDistance <- cars$dist\nplot(Speed, Distance, panel.first = lines(stats::lowess(Speed, Distance), lty = ""dashed""), pch = 0, cex = 1.2, col = ""blue"")",make_plot,"png(filename)\ndata(cars)\nplot(cars$speed, cars$dist, xlab = ""Speed (mph)"", ylab = ""Distance (ft)"", main = ""Distance vs Speed with Lowess Fit"")\nlines(lowess(cars$speed, cars$dist), col = ""blue"")\ndev.off()",True,User did not specify point or line styles and title or axis labels
5,2025-10-24,,"Calculate y = sin(pi/5 * x) at x = 0 to 12 step by 1. In a 2x2 grid, make 4 plots with points, lines, both points and lines, and histogram-like vertical lines","## Show the different plot types\nx <- 0:12\ny <- sin(pi/5 * x)\nop <- par(mfrow = c(2,2), mar = .1+ c(2,2,3,1))\nfor (tp in c(""p"",""l"",""b"",""h"")) {\n    plot(y ~ x, type = tp, main = paste0(""plot(*, type = \"""", tp, ""\"")""))\n}\npar(op)",make_plot,"png(filename)\nx <- 0:12\ny <- sin(pi/5 * x)\nplot(x, y, main='Scatter Plot', xlab='X', ylab='Y')\ndev.off()\n\npng(filename)\nx <- 0:12\ny <- sin(pi/5 * x)\nplot(x, y, type='l', main='Line Plot', xlab='X', ylab='Y')\ndev.off()\n\npng(filename)\nx <- 0:12\ny <- sin(pi/5 * x)\nplot(x, y, main='Points and Lines', xlab='X', ylab='Y')\nlines(x, y)\ndev.off()\n\npng(filename)\nx <- 0:12\ny <- sin(pi/5 * x)\nplot(x, y, main='Histogram-like Vertical Lines', xlab='X', ylab='Y', type='n')\nfor(i in 0:12) {\n  lines(c(i, i), c(0, sin(pi/5 * i)), col='blue')\n}\ndev.off()",False,Use a single function call to make 4 plots in a 2x2 grid with mfrow()
6,2025-10-24,?graphics::barplot,Make a barplot of gross national product for each year using the longley data,"barplot(GNP ~ Year, data = longley)",make_plot,"png(filename)\ndata(longley)\nbarplot(longley$GNP, names.arg = longley$Year, xlab = ""Year"", ylab = ""Gross National Product"", main = ""Gross National Product by Year"", col = ""blue"")\ndev.off()",True,User did not specify title
7,2025-10-24,?graphics::barplot,"Use longley dataset, show stacked bars of numbers of employed and unemployed across years","barplot(cbind(Employed, Unemployed) ~ Year, data = longley)",make_plot,"png(filename)\ndata(longley)\nbarplot(t(as.matrix(longley[, c(""Employed"", ""Unemployed"")])), \n  beside = FALSE, \n  col = c(""blue"", ""red""), \n  names.arg = longley$Year,\n  xlab = ""Year"", \n  ylab = ""Number of People"", \n  main = ""Employed and Unemployed Across Years"")\ndev.off()",True,"User did not specify colors, legend, or title"
8,2025-10-24,?graphics::barplot,"For the adult male passengers on the Titanic, make barplots of survivors and non-survivors subdivided by class","d.Titanic <- as.data.frame(Titanic)\nbarplot(Freq ~ Class + Survived, data = d.Titanic,\n        subset = Age == ""Adult"" & Sex == ""Male"",\n        main = ""barplot(Freq ~ Class + Survived, *)"", ylab = ""# {passengers}"", legend.text = TRUE)",make_plot,"png(filename)\n# Load the Titanic dataset from an appropriate source\nurl <- ""https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv""\ndf <- read.csv(url)\n\n# Filter for adult male passengers\nadult_men <- df[df$Sex == ""male"" & df$Age >= 18, ]\n\n# Create a table of survivors by class\nsurvivors <- table(adult_men$Survived, adult_men$Pclass)\n\n# Create barplot for survivors\nbarplot(survivors, main = ""Survivors of Titanic Among Adult Male Passengers by Class"",\n        xlab = ""Passenger Class"",\n        ylab = ""Number of Passengers"",\n        col = c(""lightblue"", ""salmon""),\n        legend = rownames(survivors),\n        beside = TRUE)\n\ndev.off()",False,Use stacked bars
9,2025-10-24,?graphics::barplot,"Using the VADeaths dataset,  plot death rates in each category with separate bars for each age range. Include a legend for age ranges and title the plot ""Death Rates in Virginia""","barplot(VADeaths, beside = TRUE,\n        col = c(""lightblue"", ""mistyrose"", ""lightcyan"",\n                ""lavender"", ""cornsilk""),\n        legend.text = rownames(VADeaths), ylim = c(0, 100))\ntitle(main = ""Death Rates in Virginia"", font.main = 4)",make_plot,"png(filename)\nbarplot(VADeaths, beside = TRUE, col = rainbow(4), \n        main = ""Death Rates in Virginia"", \n        ylab = ""Death Rates"",\n        legend = rownames(VADeaths))\ndev.off()",True,"User did not specify bar colors, y-axis range, or axis labels"
10,2025-10-24,?graphics::barplot,"Stacked barplot of death rates in Virginia with ages indicated by shading lines, steeper for higher age","barplot(VADeaths, angle = 15+10*1:5, density = 20, col = ""black"",\n        legend.text = rownames(VADeaths))\ntitle(main = list(""Death Rates in Virginia"", font = 4))","help_package, make_plot","png(filename)\ndf <- VADeaths\nbarplot(as.matrix(df), beside=FALSE, col=rainbow(nrow(df)), las=1,\n        main=""Stacked Barplot of Death Rates in Virginia"",\n        ylab=""Death Rates"",\n        xlab=""Causes of Death"")\nabline(h = seq(0, max(rowSums(as.matrix(df))), by=10), col='black', lwd=0.7, lty=2)\ntext(x=barplot(as.matrix(df), plot=FALSE),\n     y=rowSums(df),\n     labels=rowSums(df),\n     pos=3)\ndev.off()",True,
11,2025-10-24,?graphics::boxplot,boxplot insect counts for spray type,"boxplot(count ~ spray, data = InsectSprays, col = ""lightgray"")","help_package, help_topic, make_plot","png(filename)\nboxplot(count ~ spray, data = InsectSprays,\n        xlab = ""Type of spray"", ylab = ""Insect count"",\n        main = ""InsectSprays data"", varwidth = TRUE, col = ""lightgray"")\ndev.off()",True,
12,2025-10-24,?graphics::boxplot,Show log response vs treatment for orchard sprays,"boxplot(decrease ~ treatment, data = OrchardSprays, col = ""bisque"", log = ""y"")","help_topic, help_package, help_topic, make_plot","png(filename)\ndf <- OrchardSprays\ndf$decrease <- log(df$decrease)  \nplot(df$treatment, df$decrease, xlab = ""Treatment"", ylab = ""Log(Response)"", main = ""Log Response vs Treatment for Orchard Sprays"")\ndev.off()",True,
13,2025-10-24,?graphics::boxplot,"For tooth growth of guinea pigs, make side-by-side box plots of tooth length for ascorbic acid and orange juice at different vitamin C doses. Color the bars ascorbic acid - yellow and orange juice - orange","boxplot(len ~ dose, data = ToothGrowth,\n        boxwex = 0.25, at = 1:3 - 0.2,\n        subset = supp == ""VC"", col = ""yellow"",\n        main = ""Guinea Pigs' Tooth Growth"",\n        xlab = ""Vitamin C dose mg"",\n        ylab = ""tooth length"",\n        xlim = c(0.5, 3.5), ylim = c(0, 35), yaxs = ""i"")\nboxplot(len ~ dose, data = ToothGrowth, add = TRUE,\n        boxwex = 0.25, at = 1:3 + 0.2,\n        subset = supp == ""OJ"", col = ""orange"")\nlegend(2, 9, c(""Ascorbic acid"", ""Orange juice""),\n       fill = c(""yellow"", ""orange""))",make_plot,"png(filename)\n\t\n\tlibrary(datasets)\n\tdata(ToothGrowth)\n\t\n\t# Converting 'supp' to a factor\n\tToothGrowth$supp <- as.factor(ToothGrowth$supp)\n\t\n\t# Creating boxplots\n\tboxplot(len ~ dose * supp, data = ToothGrowth,\n\t        col = c(""yellow"", ""orange""),\n\t        main = ""Tooth Length by Vitamin C Dose"",\n\t        xlab = ""Vitamin C Dose"",\n\t        ylab = ""Tooth Length"",\n\t        names = c(""0.5 mg"", ""1.0 mg"", ""2.0 mg""),\n\t        las = 1)\n\tdev.off()",False,"No plot made: ""error"": ""'at' and 'labels' lengths differ, 6 != 3"
14,2025-10-24,?graphics::boxplot,"For tooth growth of guinea pigs, make side-by-side box plots of tooth length for ascorbic acid and orange juice at different vitamin C doses. Color the bars ascorbic acid - yellow and orange juice - orange","boxplot(len ~ dose:supp, data = ToothGrowth,\n        boxwex = 0.5, col = c(""orange"", ""yellow""),\n        main = ""Guinea Pigs' Tooth Growth"",\n        xlab = ""Vitamin C dose mg"", ylab = ""tooth length"",\n        sep = "":"", lex.order = TRUE, ylim = c(0, 35), yaxs = ""i"")",make_plot,"png(filename)\nset.seed(123)\n\n# Load the ToothGrowth dataset\n\ndata(ToothGrowth)\n\n# Create a color vector for the boxplots\ncolors <- c(""yellow"", ""orange"")\n\n# Create a boxplot\nboxplot(len ~ supp * dose, data = ToothGrowth, \n        col = colors, \n        main = ""Tooth Length by Supplement and Dose"",\n        xlab = ""Dose and Supplement"",\n        ylab = ""Tooth Length"")\n\ndev.off()",False,Correct swapped colors for orange juice and vitamin C
15,2025-10-24,?graphics::cdplot,"You have the following data for NASA space shuttle o-ring failures where 1 means 'no' and 2 means 'yes': fail <- c(2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1) temperature <- c(53, 57, 58, 63, 66, 67, 67, 67, 68, 69, 70, 70, 70, 70, 72, 73, 75, 75, 76, 76, 78, 79, 81) Make a conditional density plot of o-ring failures given temperature","## NASA space shuttle o-ring failures\nfail <- factor(c(2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1,\n                 1, 2, 1, 1, 1, 1, 1),\n               levels = 1:2, labels = c(""no"", ""yes""))\ntemperature <- c(53, 57, 58, 63, 66, 67, 67, 67, 68, 69, 70, 70,\n                 70, 70, 72, 73, 75, 75, 76, 76, 78, 79, 81)\n\n## CD plot\ncdplot(fail ~ temperature)",run_visible,"fail <- c(2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1)\ntemperature <- c(53, 57, 58, 63, 66, 67, 67, 67, 68, 69, 70, 70, 70, 70, 72, 73, 75, 75, 76, 76, 78, 79, 81)\n\nlibrary(ggplot2)\n\ndata <- data.frame(fail, temperature)\n\n# Convert 'fail' to a factor\ndata$fail <- factor(data$fail, levels = c(1, 2), labels = c('No', 'Yes'))\n\n# Create a conditional density plot\nggplot(data, aes(x = temperature, fill = fail)) + \n  geom_density(alpha = 0.5) + \n  labs(title = ""Conditional Density Plot of O-Ring Failures Given Temperature"", x = ""Temperature"", y = ""Density"") + \n  theme_minimal()",False,"Incorrect tool call; No plot made: ""error"": ""cannot coerce type 'object' to vector of type 'character'"""
16,2025-10-24,?graphics::cdplot,"You have the following data for NASA space shuttle o-ring failures where 1 means 'no' and 2 means 'yes': fail <- c(2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1) temperature <- c(53, 57, 58, 63, 66, 67, 67, 67, 68, 69, 70, 70, 70, 70, 72, 73, 75, 75, 76, 76, 78, 79, 81) Make a conditional density plot of o-ring failures given temperature, with failures (""yes"") as the first variable","## NASA space shuttle o-ring failures\nfail <- factor(c(2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1,\n                 1, 2, 1, 1, 1, 1, 1),\n               levels = 1:2, labels = c(""no"", ""yes""))\ntemperature <- c(53, 57, 58, 63, 66, 67, 67, 67, 68, 69, 70, 70,\n                 70, 70, 72, 73, 75, 75, 76, 76, 78, 79, 81)\n\n## highlighting for failures\ncdplot(fail ~ temperature, ylevels = 2:1)",make_plot,"png(filename)\nfail <- c(2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1)\ntemperature <- c(53, 57, 58, 63, 66, 67, 67, 67, 68, 69, 70, 70, 70, 70, 72, 73, 75, 75, 76, 76, 78, 79, 81)\n# Create a density plot for failures with temperature\nplot(density(temperature[fail == 2]), col=""red"", lwd=2, main=""Conditional Density of O-Ring Failures by Temperature"", xlab=""Temperature"", ylab=""Density"")\nlines(density(temperature[fail == 1]), col=""blue"", lwd=2)\nlegend(""topright"", legend=c(""Failures (Yes)"", ""No Failures""), col=c(""red"", ""blue""), lwd=2)\ndev.off()",False,Use cdplot()
17,2025-10-24,?graphics::cdplot,"You have the following data for NASA space shuttle o-ring failures where 1 means 'no' and 2 means 'yes': fail <- c(2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1) temperature <- c(53, 57, 58, 63, 66, 67, 67, 67, 68, 69, 70, 70, 70, 70, 72, 73, 75, 75, 76, 76, 78, 79, 81) Plot a red line showing cumulative conditional density of o-ring failures given temperature. Overlay points for failure/no failure observations plotted at probability = 1 or 0.","## NASA space shuttle o-ring failures\nfail <- factor(c(2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1,\n                 1, 2, 1, 1, 1, 1, 1),\n               levels = 1:2, labels = c(""no"", ""yes""))\ntemperature <- c(53, 57, 58, 63, 66, 67, 67, 67, 68, 69, 70, 70,\n                 70, 70, 72, 73, 75, 75, 76, 76, 78, 79, 81)\n\n## scatter plot with conditional density\ncdens <- cdplot(fail ~ temperature, plot = FALSE)\nplot(I(as.numeric(fail) - 1) ~ jitter(temperature, factor = 2),\n     xlab = ""Temperature"", ylab = ""Conditional failure probability"")\nlines(53:81, 1 - cdens[[1]](53:81), col = 2)",make_plot,"fail <- c(2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1)\ntemperature <- c(53, 57, 58, 63, 66, 67, 67, 67, 68, 69, 70, 70, 70, 70, 72, 73, 75, 75, 76, 76, 78, 79, 81)\n\n# Define failure as a binary variable\nfailure <- ifelse(fail == 2, 1, 0)\n\n# Calculate cumulative density of failures\ncum_density <- cumsum(failure) / seq_along(failure)\n\n# Set up the plot\npng(filename)\nplot(temperature, cum_density, type = ""l"", col = ""red"", lwd = 2,\n     xlab = ""Temperature (F)"", ylab = ""Cumulative Conditional Density of Failures"",\n     main = ""Cumulative Conditional Density of O-Ring Failures vs. Temperature"")\n\n# Overlay points for failure/no failure\npoints(temperature, failure, pch = 19, col = ifelse(failure == 1, ""red"", ""blue""))\n\n# Add a horizontal line for reference\nabline(h = 0, col = ""grey"")\nabline(h = 1, col = ""grey"")\ndev.off()""",False,Use cdplot()
18,2025-10-24,?graphics::coplot,For Tonga Trench Earthquakes plot latitude vs longitude conditioned on depth - use coplot() with quakes dataset,"coplot(lat ~ long | depth, data = quakes)","help_package, help_topic, make_plot","png(filename)\npar(mfrow=c(1,2))\ncoplot(lat ~ long | depth, data = quakes, layout = c(1, 1), col = ""blue"", main = ""Latitude vs Longitude conditioned on Depth"")\ndev.off()",True,
19,2025-10-24,?graphics::coplot,For Tonga Trench Earthquakes plot latitude vs longitude conditioned on depth - use coplot() with quakes dataset,"coplot(lat ~ long | depth, data = quakes)","help_package, help_topic, make_plot","png(filename)\n coplot(lat ~ long | depth, data = quakes, rows = 1)\n dev.off()",True,
20,2025-10-24,?graphics::coplot,For Tonga Trench Earthquakes plot latitude vs longitude conditioned on four intervals of depth with an overlap of 0.1 - use coplot() with quakes dataset,"given.depth <- co.intervals(quakes$depth, number = 4, overlap = .1)\ncoplot(lat ~ long | depth, data = quakes, given.values = given.depth, rows = 1)",make_plot,"png(filename)\n# Load the quakes dataset\n\ndata(quakes)\n\n# Define depth intervals and colors\nbreaks <- seq(0, 700, by = 100)\ncolors <- c(""blue"", ""green"", ""yellow"", ""red"")\n\n# Create coplot\ncoplot(lat ~ long | cut(depth, breaks = breaks), data = quakes, col = colors,\n       number = 4, overlap = 0.1, xlab = ""Longitude"", ylab = ""Latitude"", \n       main = ""Tonga Trench Earthquakes: Latitude vs Longitude by Depth Intervals"")\n\ndev.off()",False,Use co.intervals to calculate intervals passed as given.values to coplot()
21,2025-10-24,?graphics::coplot,"Using warp breaks data, plot breaks conditioned on wool and tension - use coplot()","## given two factors\nIndex <- seq_len(nrow(warpbreaks)) # to get nicer default labels\ncoplot(breaks ~ Index | wool * tension, data = warpbreaks, show.given = 0:1)",make_plot,"png(filename)\n# Load the warpbreaks dataset\ncoplot(breaks ~ wool | tension, data = warpbreaks, panel = panel.smooth)\ndev.off()",False,Condition on two factors (wool * tension)
22,2025-10-24,?graphics::contour,A Topographic Map of Maunga Whau (single color),"rx <- range(x <- 10*1:nrow(volcano))\nry <- range(y <- 10*1:ncol(volcano))\nry <- ry + c(-1, 1) * (diff(rx) - diff(ry))/2\ntcol <- terrain.colors(12)\npar(pty = ""s"", bg = ""lightcyan"")\nplot(x = 0, y = 0, type = ""n"", xlim = rx, ylim = ry, xlab = """", ylab = """")\nu <- par(""usr"")\nrect(u[1], u[3], u[2], u[4], col = tcol[8], border = ""red"")\ncontour(x, y, volcano, col = tcol[2], lty = ""solid"", add = TRUE,\n        vfont = c(""sans serif"", ""plain""))\ntitle(""A Topographic Map of Maunga Whau"", font = 4)\nabline(h = 200*0:4, v = 200*0:4, col = ""lightgray"", lty = 2, lwd = 0.1)",make_plot,"png(filename)\n# Define the dimensions of the Maunga Whau\nx <- seq(-1, 1, length.out = 100)\ny <- seq(-1, 1, length.out = 100)\n\n# Create a grid for heights\nz <- outer(x, y, function(x, y) sin(sqrt(x^2 + y^2) * 3 * pi))\n\n# Plotting the topographic map\ncontour(x, y, z, nlevels = 10, col = 'black', xlab = 'Longitude', ylab = 'Latitude')\n\n# Adding title\ntitle(main = 'Topographic Map of Maunga Whau')\ndev.off()",False,Use real dataset (volcano) not synthetic data
23,2025-10-24,?graphics::contour,A Topographic Map of Maunga Whau (single color) - use volcano data with contour(),"rx <- range(x <- 10*1:nrow(volcano))\nry <- range(y <- 10*1:ncol(volcano))\nry <- ry + c(-1, 1) * (diff(rx) - diff(ry))/2\ntcol <- terrain.colors(12)\npar(pty = ""s"", bg = ""lightcyan"")\nplot(x = 0, y = 0, type = ""n"", xlim = rx, ylim = ry, xlab = """", ylab = """")\nu <- par(""usr"")\nrect(u[1], u[3], u[2], u[4], col = tcol[8], border = ""red"")\ncontour(x, y, volcano, col = tcol[2], lty = ""solid"", add = TRUE,\n        vfont = c(""sans serif"", ""plain""))\ntitle(""A Topographic Map of Maunga Whau"", font = 4)\nabline(h = 200*0:4, v = 200*0:4, col = ""lightgray"", lty = 2, lwd = 0.1)",make_plot,"png(filename)\n# Load the volcano dataset\nvolcano_data <- as.matrix(volcano)\n\n# Generate the topographic map using contour function\ncontour(volcano_data, col = ""darkgreen"", lwd = 2, main = ""Topographic Map of Maunga Whau"", xlab = ""X-axis"", ylab = ""Y-axis"")\ndev.off()",True,
24,2025-10-24,?graphics::dotchart,Dotplot Virginia deaths - use VADeaths and dotchart(),"dotchart(VADeaths, main = ""Death Rates in Virginia - 1940"")","help_topic(""VADeaths""), help_topic(""dotchart""), make_plot","png(filename)\n\ndotchart(VADeaths, main = ""Death Rates in Virginia - 1940"")\n\ndev.off()",True,
25,2025-10-24,?graphics::dotchart,"Dotplot Virginia deaths with age as first group,  x axis from 0 to 100% - use VADeaths and dotchart()","op <- par(xaxs = ""i"")  # 0 -- 100%\ndotchart(t(VADeaths), xlim = c(0,100), bg = ""skyblue"",\n         main = ""Death Rates in Virginia - 1940"", xlab = ""rate [ % ]"",\n         ylab = ""Grouping:  Age  x   Urbanity . Gender"")","help_topic(""VADeaths""), help_topic(""dotchart""), make_plot","png(filename)\ndotchart(t(VADeaths), xlim = c(0, 100), bg = ""skyblue"",\n         main = ""Death Rates in Virginia - 1940"", xlab = ""Rate [%]"",\n         ylab = ""Grouping: Age x Urbanity . Gender"")\ndev.off()",True,
26,2025-10-24,?graphics::filled.contour,Plot topography of Maunga Whau with terrain colors - use volcano data and filled.contour(),"x <- 10*1:nrow(volcano)\ny <- 10*1:ncol(volcano)\nfilled.contour(x, y, volcano,\n    color.palette = function(n) hcl.colors(n, ""terrain""),\n    plot.title = title(main = ""The Topography of Maunga Whau"",\n    xlab = ""Meters North"", ylab = ""Meters West""),\n    plot.axes = { axis(1, seq(100, 800, by = 100))\n                  axis(2, seq(100, 600, by = 100)) },\n    key.title = title(main = ""Height\n(meters)""),\n    key.axes = axis(4, seq(90, 190, by = 10)))  # maybe also asp = 1\nmtext(paste(""filled.contour(.) from"", R.version.string),\n      side = 1, line = 4, adj = 1, cex = .66)",make_plot,"png(filename)\n# Load the volcano dataset, which is a matrix\nvolcano_data <- volcano\n\n# Create a filled contour plot\nfilled.contour(volcano_data, \n               color.palette = terrain.colors,\n               xlab = ""x coordinate (meters)"",\n               ylab = ""y coordinate (meters)"",\n               main = ""Topography of Maunga Whau (Volcano Data)"")\ndev.off()",True,
27,2025-10-24,?graphics::grid,"Plot iris sepal length vs width, color by species, ten tick marks on each axis, add grid","## change the desired number of tick marks:\npar(lab = c(10, 10, 7))\n\nwith(iris,\n     {\n     plot(Sepal.Length, Sepal.Width, col = as.integer(Species),\n          xlim = c(4, 8), ylim = c(2, 4.5), panel.first = grid(),\n          main = ""with(iris,  plot(...., panel.first = grid(), ..) )"")\n     }\n    )",make_plot,"png(filename)\n# Load iris dataset\n\ndata(iris)\n\n# Create the plot\nplot(iris$Sepal.Length, iris$Sepal.Width, \n     xlab = ""Sepal Length"", ylab = ""Sepal Width"", \n     pch = 19, col = iris$Species)\n\n# Add grid\ngrid()\n\n# Set tick marks\naxis(1, at = seq(min(iris$Sepal.Length), max(iris$Sepal.Length), length.out = 10))\naxis(2, at = seq(min(iris$Sepal.Width), max(iris$Sepal.Width), length.out = 10))\n\ndev.off()",False,Use par(lab = ) to change number of tick marks
